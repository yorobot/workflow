puts "pwd: #{Dir.pwd}"
## use working dir as root? or change to home dir ~/ or ~/mono - why? why not?
Mono.root = Dir.pwd

Mono.walk  ## for debugging print / walk mono (source) tree



## require_relative './config'


#############
#  clone

step :clone do
  #############
  ### "deep" standard/ regular clone
  [
    'yorobot/logs',
    'openfootball/football.json',
  ].each do |repo|
    Mono.clone( repo )
  end

  ######
  ### shallow "fast clone" - support libraries
  ###  use https:// instead of ssh - why? why not?
  [
    'yorobot/sport.db.more',
  ].each do |repo|
    Mono.clone( repo, depth: 1 )
  end


  names = DATASETS.map { |key,h| h[:name] }
  # e.g. like [
  #  'england',
  #  'deutschland',
  #  'espana',
  #  'italy',
  #  'france',
  #  'austria',
  #  'mexico']
  pp names

  ###################
  ### shallow "fast" clone (no commit/push possible); use depth 1
  ###  use https:// instead of ssh - why? why not?
  ###    no need for commits - just read-only ok
  names += [ ## add basic setup too
            'leagues',
            'clubs',
           ]
  names.each do |name|
    Mono.clone( "openfootball/#{name}", depth: 1 )
  end


  #############
  ### "deep" standard/ regular clone for csv datasets
  names = DATASETS_CSV.map { |key,h| h[:name] }
  pp names

  names.each do |name|
    Mono.clone( "footballcsv/#{name}" )
  end
end



##################
#  push

step :push_logs do
  msg  = "auto-update week #{Date.today.cweek}"
  Mono.open( 'yorobot/logs' ) do |proj|
    if proj.changes?
      proj.add( '.' )
      proj.commit( msg )
      proj.push
    end
  end
end


step :push_json do
  msg  = "auto-update week #{Date.today.cweek}"
  Mono.open( 'openfootball/football.json' ) do |proj|
    if proj.changes?
      proj.add( '.' )
      proj.commit( msg )
      proj.push
    end
  end
end


step :push_csv do
  msg  = "auto-update week #{Date.today.cweek}"
  names = DATASETS_CSV.map { |key,h| h[:name] }
  # e.g.
  # ['england',
  #  'deutschland',
  #  'espana']
  pp names

  names.each do |name|
    Mono.open( "footballcsv/#{name}" ) do |proj|
      if proj.changes?
        proj.add( '.' )
        proj.commit( msg )
        proj.push
      end
    end
  end
end

step :push do
   step :push_json
   step :push_csv
   step :push_logs
   ##
   # or step_push_json
   # or step_push_csv
   # or step_push_logs
end


#################
#  more

step :lint do
  ## note: CANNOT use (global) lint name,
  ##   shadowed by local
  ##  - use  _lint  or __lint__ or always step_lint _
  ##    why? why not?
  lint( DATASETS )
end

step :mirror do

end